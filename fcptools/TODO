This file's purpose is to provide a breakdown of important features/fixes
that can be implemented by any competent C programmer.

+ means todo
= means done
- means on hold


----------------
General
----------------

+ Implement future_insert(num_days) option.

= Confirm _fcpMetaParse() can handle merging metadata into an already allocated meta struct.
= Verify metadata handling when storing metadata as redirect (and not within SSK/KSK).
  (needs more testing, but looks ok).
= Rename 'rawmode' option 'noredirect'.


-----------------
ezFCPlib
-----------------

+!Add handling of CryptoKey in key generation and SSK handling.
+ Move READFILE WRITEFILE flags from ez_sys to ezFCPlib.h
+ Add configuration option for Timeout length (in seconds)
+ Add logic for processing Info.Format and Info.Description metadata key/val pairs.
+ Make hDocument->data & hMetadata->cdocs fields dynamic.
+ Warn user if HighestSeenBuild is higher than current node's build; and option to disable warning.

= Verify current DBR logic.
= Implement do_dbr option.
= Implement logic to read in <rest> section for custom metadata (_fcpMetadata.c).
= Check all internal APIs for consistant usage and funcionality.
= Update ezFCPlib programming API documentation.


------
fcpput
------

= Implement metadata handling for FEC encoded files.
= Tighten >1 file put logic (?).
= Implement meta-redirect insert option.
= Implement -g command-line switch (GenerateKeypair).


----------
fcpputsite
----------

+ Re-link againt ezFCPlib and implement site-wide specific insert logic.
+ Implement Edition based logic.
+ Implement default_doc option (defaults to index.html).


------
fcpget
------

+ Start w/ _fcpGet.c:_fcpGetBlock()
+ Implement FEC Splitfile handling for _fcpGet.c.
+ On getFollowRedirects, must save metadata for the case where a redirect takes
	the client to another key; currently we're dropping the metadata.
+ Implement regress for _fcpGet.c.
+ Implement metadata handling for FEC encoded files.

= Read metadata (if any) via fcpReadMetadata()
= Write metadata to the right place when -s is used
  (it currently dumps to stdout.. desirable?)

