Introduction
------------------------------------------------------------------------------

All values are little-endian.

A key is a 4-byte datalength, the SHA1 hash of the plaintext, and the SHA1
hashes of all the (encrypted) data blocks and redundant blocks.

The data is encrypted with 128-bit Rijndael in CBC mode with a null IV, using
the first 128 bits of the SHA1 hash of the data as the key. It must be null
padded to a multiple of 16 bytes before encryption but after hashing.

The Client Proxy Protocol                                          (Port 9993)
------------------------------------------------------------------------------

Writing an ordinary client? Read this.

To request a file by its key:

	write(sock, "r", 1);
	write(sock, &keylength, 4);
	write(sock, key, keylength);

If the request fails, the client proxy will hang up. Otherwise,
	
	read(sock, &datalength, 4);
	read(sock, &data, datalength);

And you have your data.

To insert a file:

	write(sock, "i", 1);
	write(sock, &datalength, 4);
	write(sock, data, datalength);

If the insert fails, the client proxy will hang up. Otherwise,
	
	read(sock, &keylength, 4);
	read(sock, key, keylength);

The Database Synchronization Protocol                              (Port 9991)
------------------------------------------------------------------------------

The inform server immediately returns a series of 4-byte server addresses in
network byte order (they slip right into sockaddr_in.sin_addr.s_addr).

	read(sock, &address_count, 4);
	
	for (i = 0 ; i < address_count ; i++)
	    read(sock, &address, 4);

The Server Protocol                                                (Port 9990)
------------------------------------------------------------------------------

To request a block by its SHA1 hash:

	write(sock, "r", 1);
	write(sock, hash, 20);

If the server hangs up at this point, it does not have the requested block.
Otherwise,

	read(sock, &datalength, 4);
	read(sock, data, datalength);

and then verify the SHA1 hash of the returned data against what you requested.

Inserting a block is simple:

	write(sock, "i", 1);
	write(sock, &datalength, 4);
	write(sock, data, datalength);

To Register A Server                                               (Port 9992)
------------------------------------------------------------------------------

Just connect. It'll hang up. All done.

