This is the README file for FCPtools.

CopyLeft (c) 2001 by David McNab
david@rebirthing.co.nz

This source package builds four Freenet FCP components:

* ezFCPlib:    ANSI-C Freenet client library.  It is unique in that it doesn't
               require any third party libraries (as do many of the other
               Freenet client libs.

* fcpget:      command-line freenet request, based on FCP.

* fcpput:      command-line freenet insert, based on FCP.

* fcpputsite:  command-line freesite insertion client - fast and easy.

* fcpproxy:    http proxy server; an fproxy replacement.

(Set favorite editor's tabstop to 2 for best results)

This is a work in progress.


---------------------------------------------------------------------------
Introduction
---------------------------------------------------------------------------

The aim of FCPtools is to offer a truly multi-platform ANSI-C based Freenet
client library, as well as provide command-line tools for convenience and
potentially shell scripting.

While still in development, the tools have successfully compiled and run on:
* Windows 2000/Microsoft Visual C++  6.0
* (confirmation from Win98/95 users?)
* FreeBSD & NetBSD
* GNU/Linux


---------------------------------------------------------------------------
Building the tools
---------------------------------------------------------------------------

Check INSTALL (for Unix), INSTALL.solaris or INSTALL.msvc (for Windows/MSVC++)
depending on your platform.


---------------------------------------------------------------------------
ezFCPlib - An easy, multi-platform FCP library
---------------------------------------------------------------------------

ezFCPlib aims to be a portable, multi-platform client library for programmers
who want to write Freenet capable clients without learning the details of
Freenet itself.  It also minimizes the "ripple effect" from changes in the
Node source, which is important at this stage in Freenet's life.

The API provides client writers:

* Functions to create Freenet keys and keypairs.
* High level reading/writing of Freenet data.
* Lower level reading/writing via filestreams.
* Various utility functions.

While parts of the spec are out of date, the functions and their signatures
have remained the same.  You can find it relative to this directory at:

./ezfcplib/doc/spec.html


---------------------------------------------------------------------------
About the source code
---------------------------------------------------------------------------


I (joliveri) have been restructuring the source to allow a few things I feel
are important:

*) Added ./fcpcommon directory.  All shareable code between all of
   the FCPtools should reside here.

*) Added ./include directory.  All header files shared between all of the
   FCPtools should reside here.

   ezFCPlib.h resides under the ./ezFCPlib directory since that directory
   *must* exist independantly of the tools.  This allows client writers
   to simply include the ./ezFCPlib directory under their source tree and
   Automake takes care of the rest.

*) Created ./include...
