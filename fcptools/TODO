This file's purpose is to provide a breakdown of important features/fixes
that can be implemented by any competent C programmer.

+ means todo
= means done
- means on hold


----------------
FCPtools generic
----------------

+ Ensure all printf's use proper formats (unsigned short=%su, unsigned long=%lu)
+ Implement future_insert(num_days) option.
+ Verify other options (raw, etc.) work as expected.
+ Address the myriad of compiler warnings on OSX platform.
+ Update website docs for ClientGet to clearly indicate actual behaviour.

= Confirm *BSD functionality (compiles with minimal warnings)
= Confirm Solaris functionality (compiles with minimal warnings)
= Add usage instructions to README for fcpget, fcpputsite.
= Confirm OS X functionality (compiles with tons of warnings)

-----------------
ezFCPlib specific
-----------------

+ Implement regress for _fcpGet.c.
+ Add configuration option for Timeout length (in seconds)
+ Add handling of CryptoKey in key generation and SSK handling.
+ Update ezFCPlib programming API documentation.
+ Implement FEC Splitfile handling for _fcpGet.c.
+ Implement metadata handling for FEC encoded files (specifically in ./ezFCPlib/_fcpPut.c:fec_make_metadata()).
+ Check all internal APIs for consistant usage and funcionality.
+ Add logic for processing Info.Format and Info.Description metadata key/val pairs.
+ Make hDocument->data & hMetadata->cdocs fields dynamic.
+ Warn user if HighestSeenBuild is higher than current node's build; and option to disable warning.

= SSK & KSK handling isn't working properly.. (fine; was a bug elsewhere)
= Re-implement rawmode option after routines settle down.
= Implement SkipDS logic.
= Change name of xtoi() to xtol().
= Add logic in _fcpCompat.c for read() routine for 8192 blocksize instead of '1' (done elsewhere)
= Remove the need for _fcpGlobals.c & _fcpCompat.c
= #define HFCP to hFCP to ease transition. (not necessary)
= Remove global variables in _fcpGlobals.c.  Make them private. (all that remains are read-only).
= Make fcpLog() work with files as well as standard output.
= Implement DeleteDS logic (delete-local or RemoveLocalKey).
= Add keygen code.
= Add fcphello command to just send ClientHello to node (ft-0.2).
= Handle HighestSeenBuild from NodeHello message.
= Solidify TEMP directory setting for all architectures. (fcpStartup.c)
  (Check _fcpCompat.c:_fcpTmpfile()) - could be improved upon (see above note).
= Code a seperate fcpNodeHello function. (fcpSendHello()).
= Implement CheckBlockOffset and DataBlockOffset in handling of fec segment headers.
  (it's causing the java.lang.NumberFormatException messages in Fred's log).
= Add Pending handling in put_file, so it pauses for said timeout and retries 'a-' times before returning with error.
= Use OpenKey() and WriteKey() instead of manually creating the FCP messages wherever possible.
= Correct Restarted message handling to ensure seamless restarts.
= Implement retry logic, so that ezFCPlib attempts to insert _fcpRetry times on failed message.
= Improve upon temp file and log file locations (ok for now; platform dependant).
= Add logic to _fcpDestroyHBlock to delete old tmp files.
= Verify that OpenKey/CloseKey do *not* need to be Destroyed then Recreated
  (make them re-usable after "closing" without destroying)
  ++ Make this true also for put_file/get_file.
= Change so that fcpReadKey() and fcpWriteKey() return bytes read/written instead of 0 on success.
= Improve the splitfile size ceiling; the node uses one, the tools use another (misunderstanding).
= Remove all the 8192 block writing; let the os optimize.
= Make FEC_CHUNK_SIZE configurable; default to 1M (not configurable).
= Ignore DataChunks between Restarted and DataFound messages (not a problem).
= Differentiate between splitfile size known by fcptools and the one returned by Fred's FEC commands (misunderstanding).


------
fcpput
------

+ Tighten >1 file put logic (?).

= Implement -g command-line switch (GenerateKeypair).
= Optimize main()'s speed read from standard input (use fd and read() function instead).
= (Win32); returns to command prompt with (harmless) error when reading key data from stdin.
= Complete logic to handle >1 files passed in from command line (FILES ...).
= Implement -a "--attempts" logic.


----------
fcpputsite
----------

+ Re-link againt ezFCPlib and implement site-wide specific insert logic.
+ Implement Edition based logic.
+ Verify current DBR logic.
+ Implement do_dbr option.
+ Implement default_doc option (defaults to index.html).


------
fcpget
------

+ Read metadata (if any) via fcpReadMetadata()
+ Write metadata to the right place when -s is used
  (it currently dumps to stdout.. desirable?)

