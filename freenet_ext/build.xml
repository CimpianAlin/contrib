<?xml version="1.0" encoding="UTF-8"?>
<project name="Freenet dependencies" default="all" basedir=".">

	<!-- =================================================================== -->
	<!-- Global properties                                                   -->
	<!-- =================================================================== -->

	<property file="build.properties" />
	<property file="source.properties" />
	<property name="javac.args" value="-Xlint"/>
	<property name="javac.target.version" value="1.5"/>

	<property name="pkg.base" value=".."/>
	<property name="build" value="build"/>
	<property name="src" value="src"/>
	<property name="dist" value="dist"/>

	<property name="version.src" value="freenet/node/ExtVersion.java" />
	<property name="version.make" value="freenet/node/ExtVersion.class" />

	<!-- set version string based on git-describe -->
	<exec executable="git" failifexecutionfails="false"
		errorProperty="git.errror" outputproperty="git.describe" resultproperty="git.result">
		<arg value="describe" />
		<arg value="--always" />
		<arg value="--abbrev=4" />
	</exec>
	<condition property="git.revision" value="${git.describe}" else="@custom@">
		<and>
			<equals arg1="${git.result}" arg2="0" />
			<isset property="git.describe" />
		</and>
	</condition>

	<!-- =================================================================== -->
	<!-- Miscellaneous                                                       -->
	<!-- =================================================================== -->

	<target name="dist" depends="clean-all, all" description="clean-build everything"/>

	<target name="all" depends="package" description="build everything, incl. docs"/>

	<target name="clean-all" depends="clean, clean-local, clean-lib" description="clean all build products"/>

	<target name="debug">
		<echoproperties/>
	</target>

	<!-- =================================================================== -->
	<!-- Standard build                                                      -->
	<!-- =================================================================== -->

	<target name="init">
		<mkdir dir="${build}"/>
		<mkdir dir="${dist}"/>
	</target>

	<target name="build" depends="init">
		<!-- Create the time stamp -->
		<tstamp/>

		<!-- Create the Version file with patched revision number in ${build} -->
		<copy file="${src}/${version.src}" tofile="${build}/${version.src}" overwrite="true" />
		<delete file="${build}/${version.make}" quiet="true" />
		<replace file="${build}/${version.src}">
			<replacefilter token="@custom@" value="${git.revision}"/>
		</replace>
		<echo message="Updated build version to ${git.revision} in ${main.make}/${version.src}"/>

		<javac srcdir="${build}" destdir="${build}" debug="on" optimize="on" source="1.5" target="1.5">
			<compilerarg line="${javac.args}"/>
			<include name="${version.src}"/>
		</javac>
	</target>

	<target name="package" depends="build,prepare-local,package-lib" description="build standard binary packages">
		<jar jarfile="${dist}/freenet-ext.jar" basedir="${build}" includes="**" update="yes" duplicate="fail" level="9">
			<exclude name="${version.src}"/>
		</jar>
		<copy todir="${dist}" file="${pkg.base}/wrapper/lib/wrapper.jar"/>
		<copy todir="${dist}" file="${pkg.base}/bdb-je/build/lib/je.jar"/>
		<copy todir="${dist}" file="${pkg.base}/db4o/db4o.jar"/>
		<copy tofile="${dist}/commons-compress.jar"
		  file="${pkg.base}/commons-compress/target/commons-compress-${extlib.commons-compress.version}.jar"/>
		<copy todir="${dist}" file="${pkg.base}/lzmajio/lzmajio.jar"/>
		<copy tofile="${dist}/mantissa.jar"
		  file="${pkg.base}/mantissa/mantissa-${extlib.mantissa.version}.jar"/>
	</target>

	<target name="clean" description="clean standard build products">
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>

	<!-- =================================================================== -->
	<!-- Locally-maintained                                                  -->
	<!-- =================================================================== -->

	<target name="prepare-local" depends="init,package-local">
		<unjar dest="${build}" src="${pkg.base}/onion-common/lib/onion-common.jar"/>
		<unjar dest="${build}" src="${pkg.base}/onion-fec/lib/onion-fec.jar"/>
		<copy todir="${build}"><fileset dir="${pkg.base}/jcpuid/lib" includes="freenet/**" /></copy>
		<copy todir="${build}"><fileset dir="${pkg.base}/NativeBigInteger/lib" includes="net/i2p/**" /></copy>
		<copy todir="${build}"><fileset dir="${pkg.base}/NativeThread/lib" includes="freenet/**" /></copy>
	</target>

	<target name="package-local" description="build locally maintained packages">
		<ant inheritAll="false" antfile="${pkg.base}/onion-common/build.xml"/>
		<ant inheritAll="false" antfile="${pkg.base}/onion-fec/build.xml"/>
		<!-- TODO build native binaries for the other libs -->
	</target>

	<target name="clean-local">
		<ant inheritAll="false" antfile="${pkg.base}/onion-common/build.xml" target="clean" />
		<ant inheritAll="false" antfile="${pkg.base}/onion-fec/build.xml" target="clean" />
		<!-- TODO clean native binaries for the other libs -->
	</target>

	<!-- =================================================================== -->
	<!-- External source                                                     -->
	<!-- =================================================================== -->

	<target name="package-lib" description="build external packages">
		<!-- TODO build wrapper native libs -->
		<ant inheritAll="false" antfile="${pkg.base}/wrapper/build.xml" target="jar">
			<property name="bits" value="${sun.arch.data.model}"/>
			<property name="javac.target.version" value="${javac.target.version}"/>
		</ant>
		<ant inheritAll="false" antfile="${pkg.base}/bdb-je/build.xml" target="jar"/>
		<ant inheritAll="false" antfile="${pkg.base}/db4o/build.xml" target="jar">
			<property name="javac.target.version" value="${javac.target.version}"/>
		</ant>
		<maven basedir="${pkg.base}/commons-compress" goal="package"/>

		<ant inheritAll="false" antfile="${pkg.base}/lzmajio/build.xml" target="jar"/>
		<!-- TODO run tests -->
		<ant inheritAll="false" antfile="${pkg.base}/mantissa/build.xml" target="jar"/>
	</target>

	<target name="src-lib" description="ensure that all required source code is available">
		<!-- TODO massage db4o source tree into place -->
		<fail message="TODO; not implemented"/>
	</target>

	<target name="clean-lib">
		<!--WORKAROUND bug in wrapper's build.xml-->
		<mkdir dir="${pkg.base}/wrapper/bin"/>
		<mkdir dir="${pkg.base}/wrapper/lib"/>
		<mkdir dir="${pkg.base}/wrapper/test"/>
		<ant inheritAll="false" antfile="${pkg.base}/wrapper/build.xml">
			<property name="bits" value="${sun.arch.data.model}"/>
			<target name="clean"/>
			<target name="total-clean"/>
		</ant>
		<ant inheritAll="false" antfile="${pkg.base}/bdb-je/build.xml">
			<target name="clean"/>
			<target name="clean-javadoc"/>
			<target name="clean-jca"/>
		</ant>
		<ant inheritAll="false" antfile="${pkg.base}/db4o/build.xml" target="clean"/>
		<maven basedir="${pkg.base}/commons-compress" goal="clean"/>

		<!-- lzmajio doesn't have a "clean" target :/ -->
		<!--<ant inheritAll="false" antfile="${pkg.base}/lzmajio/build.xml" target="clean"/>-->
		<ant inheritAll="false" antfile="${pkg.base}/mantissa/build.xml" target="clean"/>
	</target>

	<!-- required to work with commons-compress -->
	<include file="ant-task-maven.xml"/>

</project>
